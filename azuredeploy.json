{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUserName": {
      "defaultValue": "sergio",
      "type": "string"
    }, 
    "sshPublicKey": {
      "type": "string",
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDKlMlDqCEYmtD3NzHTzQXcu9Oj3U+CKYCU4D+kwEN5BuKs5J9lPFA9B2MsK9MYsyXoG4Gkt3ENHyzY+dgCN3eLdyiyOAtpHKddqO+5CG3mZoTlONTSofZm2pbnCoWh8UdKlBUvD467gFbw+HcBnXXY89zhdBIkhjQELcuZc0je8XsYrw++9DEJW9GBlREE8E/RustYlF5/MsNHvIxZqKNhBocX4Cj/nUdV+aGxTMa4pEnFi8gDA8xuYK9mDA/GNFd47TMa6kd+YLlojlfzp1GGDiwDK1px1TpjjzXan/dMMFbCsL5dgpuFul34U0yOdg7iEgoAUUwTGvHQsMyIl+BJ sergio@MININT-SCP2P2V"
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "sapdemo",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "installerName": {
      "type": "string",
      "defaultValue": "automatesap.sh",
      "metadata": {
        "description": "Script to be executed"
      }
    },
    "installerBlob": {
      "type": "string",
	  "defaultValue": "https://automationsapscripts.blob.core.windows.net/scripts/automatesap.sh",
      "metadata": {
        "description": "Blob with installation script."
      }
    },
	"vmSize": {
		"type": "string",
		"defaultValue":  "Standard_DS1_V2"
	}
  },
  "variables": {
    "storageAccountType": "Standard_LRS",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "vmSize": "Standard_DS1_V2",
    "ubuntuOSVersion": "16.04-LTS",
    "publicIPAddressType": "Dynamic",

    "storageAccountName": "[concat(uniquestring(resourceGroup().id), parameters('dnsLabelPrefix'))]",

    "vnet1_netPrefix": "10.99.0.0/16",
    "vnet1_vnetName": "vnet1",
    "vnet1_ID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnet1_vnetName'))]",
    "vnet1_subnetPrefix": "10.99.0.0/24",
    "vnet1_subnetName": "vnet1_subnet1",
    "vnet1_subnetRef": "[concat(variables('vnet1_ID'),'/subnets/',variables('vnet1_subnetName'))]",

    "vm1_vmName": "sapdemo",
    "vm1_nicName": "[concat(variables('vm1_vmName'), parameters('dnsLabelPrefix'))]",
    "vm1_publicIPAddressName": "[concat('vm1PubIp1', variables('vm1_vmName'), parameters('dnsLabelPrefix'))]",
    "vm1_dnsLabelPrefix": "[concat(variables('vm1_vmName'),'-',parameters('dnsLabelPrefix'))]"

  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnet1_vnetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnet1_netPrefix')]"
          ]
        },
        "subnets": [
            {
              "name": "[variables('vnet1_subnetName')]",
              "properties": {
                "addressPrefix": "[variables('vnet1_subnetPrefix')]"
              }
            }
          ]
        }
      },

    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm1_publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('vm1_dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2017-04-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('vm1_nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('vm1_publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet1_vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('vm1_publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('vnet1_subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vm1_vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('vm1_nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vm1_vmName')]",
          "adminUserName": "[parameters('adminUserName')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/',parameters('adminUserName'),'/.ssh/authorized_keys')]",
                  "keyData": "[parameters('sshPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "diskSizeGB": "1023",
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vm1_nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
          }
        }
      },
      "resources": [
        {
          "name": "installExecutor",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2016-03-30",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('vm1_vmName'))]"
          ],
          "tags": {
            "displayName": "installExecutor"
          },
          "properties": {
            "publisher": "Microsoft.OSTCExtensions",
            "type": "CustomScriptForLinux",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[parameters('installerBlob')]"
              ],
              "commandToExecute": "[concat('sh ', parameters('installerName'))]"
            }
          }
        }
      ]
    }

  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference(variables('vm1_publicIPAddressName')).dnsSettings.fqdn]"
    }
  }
}